generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String     @id @default(cuid())
  username      String?    @unique
  name          String?
  email         String     @unique
  address       String?
  password      String?
  emailVerified DateTime?
  image         String
  creditAmount  Int?
  phoneNumber   String?
  assets        Asset[]    @relation("sellers")
  bidAssets     BidAsset[] @relation("bidder")
  accounts      Account[]
  sessions      Session[]
}

model Asset {
  id           String        @id @default(cuid())
  imageUrl     String        @unique
  name         String
  description  String
  openingPrice Int?
  endTime      DateTime?
  sellerId     String
  seller       User          @relation("sellers", fields: [sellerId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @default(now()) @updatedAt
  deletedAt    DateTime?
  bidAssets    BidAsset[]    @relation("bidAsset")
  transactions Transaction[]
}

model BidAsset {
  id           String        @id @default(cuid())
  assetId      String
  userId       String
  bidAmount    Int
  currentPrice Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  deletedAt    DateTime?
  asset        Asset?        @relation("bidAsset", fields: [assetId], references: [id])
  bidder       User          @relation("bidder", fields: [userId], references: [id])
  transaction  Transaction[]
}

model Transaction {
  id        String   @id @default(cuid())
  assetId   String
  bidderId  String
  bidder    BidAsset @relation(fields: [bidderId], references: [id])
  assets    Asset    @relation(fields: [assetId], references: [id])
  price     Int
  createdAt DateTime @default(now())
}
